version: '2.3'

services:

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: mos
      POSTGRES_PASSWORD: mos
      POSTGRES_DB: mos
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbit:
    image: rabbitmq:latest

  redis:
    image: redis:latest

  backend:
    image: tomastinoco/mos-demo-backend:latest
    restart: on-failure
    environment:
      - MOS_BACKEND_DEBUG=1
      - MOS_BACKEND_HOST=backend
      - MOS_BACKEND_PORT=8000
      - MOS_ADMIN_USR=mos
      - MOS_ADMIN_PWD=demo
      - MOS_ADMIN_EMAIL=some@email.net
      - MOS_DATABASE_NAME=mos
      - MOS_DATABASE_USR=mos
      - MOS_DATABASE_PWD=mos
      - MOS_DATABASE_HOST=db
      - MOS_DATABASE_PORT=5432
      - MOS_RABBIT_PORT=5672  
      - MOS_RABBIT_USR=guest
      - MOS_RABBIT_PWD=guest
      - MOS_RABBIT_HOST=rabbit
      - MOS_REDIS_DB=0
      - MOS_REDIS_PORT=6379
      - MOS_REDIS_HOST=redis
      - MOS_FRONTEND_HOST=localhost
      - MOS_FRONTEND_PORT=4200
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - backend_data:/mos-backend/service/media

  frontend:
    image: tomastinoco/mos-demo-frontend:latest
    restart: on-failure
    ports:
      - "4200:4200"
    depends_on:
      - backend

  compute-py:
    image: tomastinoco/mos-demo-compute-py:latest
    restart: on-failure
    environment:
      - MOS_BACKEND_HOST=backend
      - MOS_BACKEND_PORT=8000
      - MOS_ADMIN_USR=mos
      - MOS_ADMIN_PWD=demo
      - MOS_RABBIT_PORT=5672
      - MOS_RABBIT_USR=guest
      - MOS_RABBIT_PWD=guest
      - MOS_RABBIT_HOST=rabbit
    depends_on:
      - rabbit
      - backend
      - frontend

  compute-jl:
    image: tomastinoco/mos-demo-compute-jl:latest
    restart: on-failure
    environment:
      - MOS_BACKEND_HOST=backend
      - MOS_BACKEND_PORT=8000
      - MOS_ADMIN_USR=mos
      - MOS_ADMIN_PWD=demo
      - MOS_RABBIT_PORT=5672
      - MOS_RABBIT_USR=guest
      - MOS_RABBIT_PWD=guest
      - MOS_RABBIT_HOST=rabbit
    depends_on:
      - rabbit
      - backend
      - frontend

volumes:
  postgres_data:
  backend_data: